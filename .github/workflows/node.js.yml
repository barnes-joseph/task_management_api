name: Task Management API CI

on: 
  push:
    branches: ["master"]

env:
  ENV: test

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      # run steps required in the workflow
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      # - name: migrate database
      #   run: node migrate.js
      #   env:
      #     DBURL: "postgres://postgres:postgres@localhost:5432/postgres"

      - name: Run Tests
        run: npm run test
        env:
          DBURL: postgres://postgres:postgres@localhost:5432/postgres
          TOKEN_KEY: 23862dfaf0719dcb7877ab3ad7af04514133f886132dd89d5bcccf0478131074

  build-and-publish:
    needs: build-and-test
    name: build and publish to docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: npm install
        uses: actions/npm@master
        with:
          args: install     
      - name: docker build
        uses: actions/docker/cli@master
        with:
          args: build -t shikamaru05/task-management-api .
      - name: docker login
        uses: actions/docker/login@master
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      - name: docker push
        uses: actions/docker/cli@master
        with:
          args: push shikamaru05/task-management-api 
